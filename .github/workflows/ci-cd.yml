name: Test and Deploy

on:
  push:
    branches:
      - master
      - demo
      - dev_iprepin
      - dev/andrey_solovev

jobs:
  test:
    runs-on: ubuntu-22.04
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      DATABASE_URL_TEST: postgresql+asyncpg://test_user:pass@localhost:5432/cinema_test
      PHONE_VALIDATOR: ${{ secrets.PHONE_VALIDATOR }}
      EMAIL_VALIDATOR: ${{ secrets.EMAIL_VALIDATOR }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
      redis:
        image: redis
        env:
          REDIS_HOST: redis
          REDIS_PORT: 6379
          REDIS_URL: ${{ env.REDIS_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: pip install -r requirements/dev.txt

      - name: Run linters
        run: ruff check

      - name: Run tests
        env:
          DATABASE_URL_TEST: ${{ env.DATABASE_URL_TEST }}
        run: pytest -v --cov=src tests/


#   Деплой на сервер для ветки master
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server using Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd coffe-team-cinema-online
            git pull origin master
            docker build . --tag fastapi_app
            docker stop fastapi_app
            docker rm fastapi_app
            docker run -d --name fastapi_app -p 80:80
