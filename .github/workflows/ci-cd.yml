name: Test and Deploy

on:
  push:
    branches:
      - master
      - demo
      - dev_iprepin
      - dev/andrey_solovev

jobs:
  test:
    runs-on: ubuntu-22.04
    env:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_HOST: localhost
      POSTGRES_DB: test_db
      POSTGRES_PORT: 5432
      DATABASE_URL_TEST: postgresql+asyncpg://test_user:test_pass@localhost:5432/test_db
      PHONE_VALIDATOR: (?:\+7|7|8)[-\s\(]?(\d{3})[\)\s-]?(\d{3})[-\s]?(\d{2})[-\s]?(\d{2})
      EMAIL_VALIDATOR: (^[\w\.-]+@[\w\.-]+\.\w{2,}$)
      REDIS_URL: redis://localhost:6379/0
      SMTP_PASS: test_pass
      SMTP_USER: test_user
      SMTP_PORT: test_port
      SMTP_HOST: localhost

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
      redis:
        image: redis
        env:
          REDIS_HOST: redis
          REDIS_PORT: 6379
          REDIS_URL: ${{ env.REDIS_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: pip install -r requirements/dev.txt

      - name: Run linters
        run: ruff check

      - name: Run tests
        env:
          DATABASE_URL_TEST: ${{ env.DATABASE_URL_TEST }}
        run: pytest -v --cov=src tests/


  # Деплой на сервер для ветки master
#  deploy:
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    needs: test
#
#    steps:
#      - name: Deploy to server using Docker
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          port: ${{ secrets.SSH_PORT }}
#          script: |
#            cd /home/<папка_проекта>
#            git pull origin master
#            source .venv/bin/activate
#            docker build -t <your-image-name>:latest
#            docker stop <your-container-name>
#            docker rm <your-container-name>
#            docker run -d --name <your-container-name>
            
#            TODO:Если в процессе установки требуется ввод паролей то создаем файлы deploy.sh и deploy.exp
#            TODO:Так-же устанавливаем expect sudo apt install expect -y