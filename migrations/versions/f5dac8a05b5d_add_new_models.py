"""add new models

Revision ID: f5dac8a05b5d
Revises: b1829cb04207
Create Date: 2025-01-16 22:53:22.378457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5dac8a05b5d'
down_revision: Union[str, None] = 'b1829cb04207'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.VARCHAR(), nullable=False),
    sa.Column('last_name', sa.VARCHAR(), nullable=False),
    sa.Column('eng_full_name', sa.VARCHAR(), nullable=False),
    sa.Column('biography', sa.Text(), nullable=False),
    sa.Column('avatar', sa.VARCHAR(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('place_of_birth', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_actor_id'), 'actor', ['id'], unique=False, schema='public')
    op.create_table('news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=50), nullable=False),
    sa.Column('sub_title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('text_news', sa.Text(), nullable=True),
    sa.Column('comment', sa.Integer(), nullable=True),
    sa.Column('source', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_news_id'), 'news', ['id'], unique=False, schema='public')
    op.create_table('reward',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('avatar', sa.VARCHAR(), nullable=False),
    sa.Column('nomination', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_reward_id'), 'reward', ['id'], unique=False, schema='public')
    op.create_table('reward_actor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('reward_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['public.actor.id'], ),
    sa.ForeignKeyConstraint(['reward_id'], ['public.reward.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_reward_actor_id'), 'reward_actor', ['id'], unique=False, schema='public')
    op.create_table('actor_movie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['public.actor.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['public.movie.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_actor_movie_id'), 'actor_movie', ['id'], unique=False, schema='public')
    op.create_table('news_actor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['public.user.id'], ),
    sa.ForeignKeyConstraint(['news_id'], ['public.news.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_news_actor_id'), 'news_actor', ['id'], unique=False, schema='public')
    op.create_table('news_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=False),
    sa.Column('text_comment', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['public.news.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_news_comments_id'), 'news_comments', ['id'], unique=False, schema='public')
    op.create_table('news_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=False),
    sa.Column('is_view', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['public.news.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_news_views_id'), 'news_views', ['id'], unique=False, schema='public')
    op.create_table('reward_movie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('reward_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['public.movie.id'], ),
    sa.ForeignKeyConstraint(['reward_id'], ['public.reward.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_reward_movie_id'), 'reward_movie', ['id'], unique=False, schema='public')
    op.drop_constraint('favorite_user_id_fkey', 'favorite', type_='foreignkey')
    op.drop_constraint('favorite_movie_id_fkey', 'favorite', type_='foreignkey')
    op.create_foreign_key(None, 'favorite', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'favorite', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('genre_movie_movie_id_fkey', 'genre_movie', type_='foreignkey')
    op.drop_constraint('genre_movie_genre_id_fkey', 'genre_movie', type_='foreignkey')
    op.create_foreign_key(None, 'genre_movie', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'genre_movie', 'genre', ['genre_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('like_movie_id_fkey', 'like', type_='foreignkey')
    op.drop_constraint('like_user_id_fkey', 'like', type_='foreignkey')
    op.create_foreign_key(None, 'like', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'like', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('movie_category_id_fkey', 'movie', type_='foreignkey')
    op.create_foreign_key(None, 'movie', 'category', ['category_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('movie_comments_movie_id_fkey', 'movie_comments', type_='foreignkey')
    op.drop_constraint('movie_comments_user_id_fkey', 'movie_comments', type_='foreignkey')
    op.create_foreign_key(None, 'movie_comments', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'movie_comments', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('movie_rating_user_id_fkey', 'movie_rating', type_='foreignkey')
    op.drop_constraint('movie_rating_movie_id_fkey', 'movie_rating', type_='foreignkey')
    op.create_foreign_key(None, 'movie_rating', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'movie_rating', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('photo_movie_id_fkey', 'photo', type_='foreignkey')
    op.create_foreign_key(None, 'photo', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('poster_movie_id_fkey', 'poster', type_='foreignkey')
    op.create_foreign_key(None, 'poster', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('social_networks_user_id_fkey', 'social_networks', type_='foreignkey')
    op.create_foreign_key(None, 'social_networks', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('trailer_movie_id_fkey', 'trailer', type_='foreignkey')
    op.create_foreign_key(None, 'trailer', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('user_role_id_fkey', 'user', type_='foreignkey')
    op.create_foreign_key(None, 'user', 'role', ['role_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', schema='public', type_='foreignkey')
    op.create_foreign_key('user_role_id_fkey', 'user', 'role', ['role_id'], ['id'])
    op.drop_constraint(None, 'trailer', schema='public', type_='foreignkey')
    op.create_foreign_key('trailer_movie_id_fkey', 'trailer', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'social_networks', schema='public', type_='foreignkey')
    op.create_foreign_key('social_networks_user_id_fkey', 'social_networks', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'poster', schema='public', type_='foreignkey')
    op.create_foreign_key('poster_movie_id_fkey', 'poster', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'photo', schema='public', type_='foreignkey')
    op.create_foreign_key('photo_movie_id_fkey', 'photo', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'movie_rating', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'movie_rating', schema='public', type_='foreignkey')
    op.create_foreign_key('movie_rating_movie_id_fkey', 'movie_rating', 'movie', ['movie_id'], ['id'])
    op.create_foreign_key('movie_rating_user_id_fkey', 'movie_rating', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'movie_comments', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'movie_comments', schema='public', type_='foreignkey')
    op.create_foreign_key('movie_comments_user_id_fkey', 'movie_comments', 'user', ['user_id'], ['id'])
    op.create_foreign_key('movie_comments_movie_id_fkey', 'movie_comments', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'movie', schema='public', type_='foreignkey')
    op.create_foreign_key('movie_category_id_fkey', 'movie', 'category', ['category_id'], ['id'])
    op.drop_constraint(None, 'like', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'like', schema='public', type_='foreignkey')
    op.create_foreign_key('like_user_id_fkey', 'like', 'user', ['user_id'], ['id'])
    op.create_foreign_key('like_movie_id_fkey', 'like', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'genre_movie', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'genre_movie', schema='public', type_='foreignkey')
    op.create_foreign_key('genre_movie_genre_id_fkey', 'genre_movie', 'genre', ['genre_id'], ['id'])
    op.create_foreign_key('genre_movie_movie_id_fkey', 'genre_movie', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'favorite', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'favorite', schema='public', type_='foreignkey')
    op.create_foreign_key('favorite_movie_id_fkey', 'favorite', 'movie', ['movie_id'], ['id'])
    op.create_foreign_key('favorite_user_id_fkey', 'favorite', 'user', ['user_id'], ['id'])
    op.drop_index(op.f('ix_public_reward_movie_id'), table_name='reward_movie', schema='public')
    op.drop_table('reward_movie', schema='public')
    op.drop_index(op.f('ix_public_news_views_id'), table_name='news_views', schema='public')
    op.drop_table('news_views', schema='public')
    op.drop_index(op.f('ix_public_news_comments_id'), table_name='news_comments', schema='public')
    op.drop_table('news_comments', schema='public')
    op.drop_index(op.f('ix_public_news_actor_id'), table_name='news_actor', schema='public')
    op.drop_table('news_actor', schema='public')
    op.drop_index(op.f('ix_public_actor_movie_id'), table_name='actor_movie', schema='public')
    op.drop_table('actor_movie', schema='public')
    op.drop_index(op.f('ix_public_reward_actor_id'), table_name='reward_actor', schema='public')
    op.drop_table('reward_actor', schema='public')
    op.drop_index(op.f('ix_public_reward_id'), table_name='reward', schema='public')
    op.drop_table('reward', schema='public')
    op.drop_index(op.f('ix_public_news_id'), table_name='news', schema='public')
    op.drop_table('news', schema='public')
    op.drop_index(op.f('ix_public_actor_id'), table_name='actor', schema='public')
    op.drop_table('actor', schema='public')
    # ### end Alembic commands ###
