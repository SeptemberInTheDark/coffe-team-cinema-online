"""fix model Reward

Revision ID: b1829cb04207
Revises: d5b39586ee96
Create Date: 2025-01-16 16:19:41.791762

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b1829cb04207'
down_revision: Union[str, None] = 'd5b39586ee96'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('favorite_user_id_fkey', 'favorite', type_='foreignkey')
    op.drop_constraint('favorite_movie_id_fkey', 'favorite', type_='foreignkey')
    op.create_foreign_key(None, 'favorite', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'favorite', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('genre_movie_genre_id_fkey', 'genre_movie', type_='foreignkey')
    op.drop_constraint('genre_movie_movie_id_fkey', 'genre_movie', type_='foreignkey')
    op.create_foreign_key(None, 'genre_movie', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'genre_movie', 'genre', ['genre_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('like_user_id_fkey', 'like', type_='foreignkey')
    op.drop_constraint('like_movie_id_fkey', 'like', type_='foreignkey')
    op.create_foreign_key(None, 'like', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'like', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('movie_category_id_fkey', 'movie', type_='foreignkey')
    op.create_foreign_key(None, 'movie', 'category', ['category_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('movie_comments_movie_id_fkey', 'movie_comments', type_='foreignkey')
    op.drop_constraint('movie_comments_user_id_fkey', 'movie_comments', type_='foreignkey')
    op.create_foreign_key(None, 'movie_comments', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'movie_comments', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('movie_rating_user_id_fkey', 'movie_rating', type_='foreignkey')
    op.drop_constraint('movie_rating_movie_id_fkey', 'movie_rating', type_='foreignkey')
    op.create_foreign_key(None, 'movie_rating', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'movie_rating', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('photo_movie_id_fkey', 'photo', type_='foreignkey')
    op.create_foreign_key(None, 'photo', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('poster_movie_id_fkey', 'poster', type_='foreignkey')
    op.create_foreign_key(None, 'poster', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('social_networks_user_id_fkey', 'social_networks', type_='foreignkey')
    op.create_foreign_key(None, 'social_networks', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('trailer_movie_id_fkey', 'trailer', type_='foreignkey')
    op.create_foreign_key(None, 'trailer', 'movie', ['movie_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('user_role_id_fkey', 'user', type_='foreignkey')
    op.create_foreign_key(None, 'user', 'role', ['role_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', schema='public', type_='foreignkey')
    op.create_foreign_key('user_role_id_fkey', 'user', 'role', ['role_id'], ['id'])
    op.drop_constraint(None, 'trailer', schema='public', type_='foreignkey')
    op.create_foreign_key('trailer_movie_id_fkey', 'trailer', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'social_networks', schema='public', type_='foreignkey')
    op.create_foreign_key('social_networks_user_id_fkey', 'social_networks', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'poster', schema='public', type_='foreignkey')
    op.create_foreign_key('poster_movie_id_fkey', 'poster', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'photo', schema='public', type_='foreignkey')
    op.create_foreign_key('photo_movie_id_fkey', 'photo', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'movie_rating', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'movie_rating', schema='public', type_='foreignkey')
    op.create_foreign_key('movie_rating_movie_id_fkey', 'movie_rating', 'movie', ['movie_id'], ['id'])
    op.create_foreign_key('movie_rating_user_id_fkey', 'movie_rating', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'movie_comments', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'movie_comments', schema='public', type_='foreignkey')
    op.create_foreign_key('movie_comments_user_id_fkey', 'movie_comments', 'user', ['user_id'], ['id'])
    op.create_foreign_key('movie_comments_movie_id_fkey', 'movie_comments', 'movie', ['movie_id'], ['id'])
    op.drop_constraint(None, 'movie', schema='public', type_='foreignkey')
    op.create_foreign_key('movie_category_id_fkey', 'movie', 'category', ['category_id'], ['id'])
    op.drop_constraint(None, 'like', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'like', schema='public', type_='foreignkey')
    op.create_foreign_key('like_movie_id_fkey', 'like', 'movie', ['movie_id'], ['id'])
    op.create_foreign_key('like_user_id_fkey', 'like', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'genre_movie', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'genre_movie', schema='public', type_='foreignkey')
    op.create_foreign_key('genre_movie_movie_id_fkey', 'genre_movie', 'movie', ['movie_id'], ['id'])
    op.create_foreign_key('genre_movie_genre_id_fkey', 'genre_movie', 'genre', ['genre_id'], ['id'])
    op.drop_constraint(None, 'favorite', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'favorite', schema='public', type_='foreignkey')
    op.create_foreign_key('favorite_movie_id_fkey', 'favorite', 'movie', ['movie_id'], ['id'])
    op.create_foreign_key('favorite_user_id_fkey', 'favorite', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###
